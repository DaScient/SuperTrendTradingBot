{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30839,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/dascient/la-vie-bohem-part-2?scriptVersionId=218018862\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"# **Part 2: Becoming the Best Analytic Solver and Data Science Expert** üåü\n\nWelcome to part two of your journey to mastering analytics and data science! This notebook will guide you through leveraging open-source resources, promoting complexity and creativity, and fostering a culture of sharing hidden insights with fellow data enthusiasts. Let's get started! üöÄ\n\n---\n\n## Series Links\n\n1. [**La Vie Bohem - Coding Republic (Introduction)**](https://www.kaggle.com/code/dascient/la-vie-bohem-coding-republic)  \n2. [**La Vie Bohem - Part 2: Data Exploration and Visualization**](https://www.kaggle.com/code/dascient/la-vie-bohem-part-2)  \n3. [**La Vie Bohem - Part 3: Advanced Modeling Techniques**](https://www.kaggle.com/code/dascient/la-vie-bohem-part-3)  \n4. [**La Vie Bohem - Part 4: Model Evaluation and Tuning**](https://www.kaggle.com/code/dascient/la-vie-bohem-part-4)  \n4. [**La Vie Bohem - Part 4a: Extra Credit**](https://www.kaggle.com/code/dascient/la-vie-bohem-part-4a)  \n5. [**La Vie Bohem - Whispers of the Infinite**](https://www.kaggle.com/code/dascient/la-vie-bohem-whispers-of-the-infinite)  \n\n---","metadata":{}},{"cell_type":"markdown","source":"## **1. Leveraging Open-Source Resources** üåç\n\nOpen-source tools and platforms are your best friends in data science. Here's how to use them effectively:\n\n- **Pandas and NumPy**: For data manipulation and numerical computation.\n- **Matplotlib and Seaborn**: For data visualization.\n- **Scikit-learn**: For machine learning.\n- **TensorFlow and PyTorch**: For deep learning.\n- **Hugging Face**: For natural language processing.\n\nExample: Exploring open-source datasets from Kaggle and UCI Machine Learning Repository.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\n\n# Load a sample dataset from an open-source repository\nurl = 'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv'\ndata = pd.read_csv(url)\n\n# Display the first few rows of the dataset\nprint(data.head())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-17T07:29:01.731237Z","iopub.execute_input":"2025-01-17T07:29:01.731764Z","iopub.status.idle":"2025-01-17T07:29:03.06717Z","shell.execute_reply.started":"2025-01-17T07:29:01.731731Z","shell.execute_reply":"2025-01-17T07:29:03.065897Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## **2. Promote Complexity and Creativity** üé®\n\nTackle complex problems to grow as a data scientist:\n\n- **Experiment with complex datasets**: Try multi-dimensional or time-series data.\n- **Combine algorithms creatively**: Mix clustering with classification or regression with neural networks.\n- **Build interpretable models**: Use SHAP or LIME to make your models explainable.\n\nExample: Perform clustering on a dataset and visualize the clusters.","metadata":{}},{"cell_type":"code","source":"from sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Perform KMeans clustering\nkmeans = KMeans(n_clusters=3, random_state=42)\ndata['Cluster'] = kmeans.fit_predict(data.iloc[:, :-1])\n\n# Visualize the clusters\nsns.scatterplot(x=data['sepal_length'], y=data['sepal_width'], hue=data['Cluster'], palette='viridis')\nplt.title('Clustering Results')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-17T07:29:03.068076Z","iopub.execute_input":"2025-01-17T07:29:03.068396Z","iopub.status.idle":"2025-01-17T07:29:05.885853Z","shell.execute_reply.started":"2025-01-17T07:29:03.068372Z","shell.execute_reply":"2025-01-17T07:29:05.884432Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## **3. Hidden Notes for Continuous Learning** ‚úçÔ∏è\n\nCreate hidden gems of knowledge for your peers:\n\n- **Annotate your code**: Use comments to explain logic and share insights.\n- **Include Jupyter notebook markdowns**: Provide context and reasoning for your steps.\n- **Share insights on forums**: Contribute to discussions on Reddit, Stack Overflow, or Kaggle.\n\nExample: Annotating code with insightful comments.","metadata":{}},{"cell_type":"code","source":"# Example of annotated code\n\ndef calculate_mean(numbers):\n    \"\"\"\n    This function calculates the mean of a list of numbers.\n    - Input: List of numerical values.\n    - Output: Mean of the list.\n    \"\"\"\n    return sum(numbers) / len(numbers)\n\n# Example usage\nnumbers = [10, 20, 30, 40, 50]\nmean = calculate_mean(numbers)\nprint(f\"The mean is: {mean}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-17T07:29:05.88701Z","iopub.execute_input":"2025-01-17T07:29:05.887503Z","iopub.status.idle":"2025-01-17T07:29:05.895662Z","shell.execute_reply.started":"2025-01-17T07:29:05.887476Z","shell.execute_reply":"2025-01-17T07:29:05.89371Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## **4. Fostering a Culture of Collaboration** ü§ù\n\nData science thrives on collaboration. Here's how to build a strong community:\n\n- **Host study groups**: Share ideas and tackle projects together.\n- **Contribute to open-source projects**: Help improve existing libraries or datasets.\n- **Organize challenges**: Host competitions to solve real-world problems.\n\nExample: Contribute to an open-source repository on GitHub.","metadata":{}},{"cell_type":"markdown","source":"## **5. Keep Things Fresh** üçÉ\n\nAvoid stagnation by exploring new areas:\n\n- **Learn emerging technologies**: Quantum computing, Edge AI, etc.\n- **Take inspiration from art and nature**: Use creativity to inspire algorithms.\n- **Experiment frequently**: Try unconventional approaches to common problems.\n\nYour journey as a data scientist is ever-evolving. Keep exploring, sharing, and innovating! üåü","metadata":{}}]}