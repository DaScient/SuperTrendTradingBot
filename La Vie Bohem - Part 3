{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/dascient/la-vie-bohem-part-3?scriptVersionId=217847712\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"# **Part 3: Secrets of the Craft ‚Äì The Second Degree of Mastery** üîÆ\n\nWelcome, seeker of knowledge. You are now entering the second degree of mastery in the art of data science and analytics. This is where the craft becomes profound, where you blend skill, creativity, and wisdom to unlock the hidden mysteries of the universe. Let us proceed with discretion and purpose. ü§´","metadata":{}},{"cell_type":"markdown","source":"## **1. The Pillars of Mastery** üèõÔ∏è\n\nEvery master stands on the foundation of these three pillars:\n\n- **Knowledge**: A deep understanding of tools, methods, and algorithms.\n- **Wisdom**: Knowing when and how to apply knowledge.\n- **Virtue**: Using skills ethically to benefit humanity.\n\nTake a moment to reflect on how you embody these principles in your work.","metadata":{}},{"cell_type":"markdown","source":"## **2. The Hidden Patterns** üî¢\n\nSeek the unseen by uncovering hidden patterns in data. Here is a secret technique to reveal correlations and anomalies:\n\n- **Correlation Matrices**: Discover relationships between variables.\n- **Anomaly Detection**: Identify outliers that may indicate rare events.\n\nExample: Generating a correlation matrix and visualizing it.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Load sample data\nurl = 'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/tips.csv'\ndata = pd.read_csv(url)\n\n# Calculate the correlation matrix\ncorr = data.corr()\n\n# Visualize the correlation matrix\nsns.heatmap(corr, annot=True, cmap='coolwarm', fmt='.2f')\nplt.title('Correlation Matrix')\nplt.show()","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## **3. The Symbols of Complexity** ‚öôÔ∏è\n\nIn the complexity of the craft lies its beauty. Master these symbols:\n\n- **Fractals**: Represent infinite complexity within finite bounds.\n- **Chaos Theory**: Understand how small changes create significant impacts.\n\nExample: Visualizing the Mandelbrot set, a fractal of infinite detail.","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport matplotlib.pyplot as plt\n\n# Mandelbrot Set\nx, y = np.linspace(-2.0, 1.0, 1000), np.linspace(-1.5, 1.5, 1000)\nx, y = np.meshgrid(x, y)\nc = x + 1j * y\nz = c\nmandelbrot = np.zeros(c.shape, dtype=int)\n\nfor i in range(100):\n    z = z**2 + c\n    mask = (mandelbrot == 0) & (abs(z) > 2)\n    mandelbrot[mask] = i\n\nplt.imshow(mandelbrot, cmap='inferno', extent=(-2, 1, -1.5, 1.5))\nplt.colorbar(label='Iteration Count')\nplt.title('Mandelbrot Set')\nplt.xlabel('Real Part')\nplt.ylabel('Imaginary Part')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T01:59:39.220008Z","iopub.status.idle":"2025-01-16T01:59:39.220359Z","shell.execute_reply":"2025-01-16T01:59:39.220197Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## **4. The Code of Ethics** üìú\n\nA true master upholds these ethical codes:\n\n1. **Transparency**: Make your methods clear and replicable.\n2. **Equity**: Ensure fairness and eliminate biases in algorithms.\n3. **Accountability**: Accept responsibility for the outcomes of your work.\n\nReflect on these codes as you advance in the craft.","metadata":{}},{"cell_type":"markdown","source":"## **5. Hidden Messages** üîè\n\nMasters often leave hidden messages for those who follow in their footsteps. Use comments, annotations, and subtle patterns to inspire and guide others.\n\nExample: Embedding a hidden message in your code.","metadata":{}},{"cell_type":"code","source":"# Hidden message example\n\n# This function calculates the Fibonacci sequence.\ndef fibonacci(n):\n    \"\"\"\n    Fibonacci: A series of numbers where each number is the sum of the two preceding ones.\n    Hidden Wisdom: Great things often have simple origins.\n    \"\"\"\n    a, b = 0, 1\n    for _ in range(n):\n        yield a\n        a, b = b, a + b\n\n# Generate the first 10 Fibonacci numbers\nlist(fibonacci(10))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-16T01:59:39.221484Z","iopub.status.idle":"2025-01-16T01:59:39.221954Z","shell.execute_reply":"2025-01-16T01:59:39.22174Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## **Conclusion** üèÅ\n\nYou have taken another step in mastering the craft. Remember to:\n\n- Seek knowledge with humility.\n- Share wisdom with generosity.\n- Build solutions with virtue.\n\nMay your path be illuminated by curiosity and creativity. üîÆ","metadata":{}}]}