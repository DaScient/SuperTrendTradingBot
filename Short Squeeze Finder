{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10397718,"sourceType":"datasetVersion","datasetId":6442525}],"dockerImageVersionId":30822,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/dascient/short-squeeze-identifier-dascient-llc?scriptVersionId=216554001\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"raw","source":"To create an open-source-driven Python script that scrapes the latest cryptocurrency and 24-hour stock markets for Short Squeeze opportunities, we need to utilize data from various market sources, apply technical analysis to detect potential Short Squeeze signals, and display the results in a user-friendly format. The script should calculate potential returns and estimate when the short squeeze is expected to begin based on certain market signals.\n\nHere's an outline of what the script will do:\n\nAnalyze data to detect short squeeze opportunities. A short squeeze typically happens when the price of a stock rises sharply, forcing traders who have bet against the stock (short sellers) to buy shares to cover their positions, further driving the price up. This can be detected by analyzing indicators like:\nShort Interest Ratio: Percentage of shares that are shorted relative to the float.\nPrice Action: Price rising rapidly after consolidation or downward trend.\nVolume: Unusually high volume relative to previous periods.\nDisplay the results: List out potential short squeeze candidates, their expected return, and an estimated time when the squeeze could occur based on historical patterns.","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"code","source":"from IPython.display import clear_output\n!pip install yfinance pandas\nclear_output()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-07T19:48:01.818208Z","iopub.execute_input":"2025-01-07T19:48:01.818657Z","iopub.status.idle":"2025-01-07T19:48:06.665436Z","shell.execute_reply.started":"2025-01-07T19:48:01.818626Z","shell.execute_reply":"2025-01-07T19:48:06.664008Z"},"_kg_hide-input":true},"outputs":[],"execution_count":3},{"cell_type":"code","source":"import yfinance as yf\nimport pandas as pd\nimport numpy as np\nimport datetime\nimport matplotlib.pyplot as plt\n\n# Function to retrieve stock data\ndef get_stock_data(ticker, start_date, end_date):\n    stock_data = yf.download(ticker, start=start_date, end=end_date)\n    return stock_data\n\n# Function to calculate short squeeze indicators\ndef calculate_short_squeeze_indicators(stock_data):\n    # Calculate daily returns\n    stock_data['Daily Return'] = stock_data['Adj Close'].pct_change()\n    \n    # Calculate the moving average of volume over the past 20 days\n    stock_data['Volume MA'] = stock_data['Volume'].rolling(window=20).mean()\n\n    # Calculate the average price over the past 20 days\n    stock_data['Price MA'] = stock_data['Adj Close'].rolling(window=20).mean()\n\n    # Identify if a short squeeze is happening based on these factors\n    stock_data['Potential Squeeze'] = (stock_data['Daily Return'] > 0.05) & \\\n                                      (stock_data['Volume'] > stock_data['Volume MA'] * 1.5) & \\\n                                      (stock_data['Adj Close'] > stock_data['Price MA'] * 1.1)\n\n    return stock_data\n\n# Function to identify stocks with potential short squeeze\ndef identify_short_squeeze_stocks(tickers):\n    today = datetime.date.today()\n    start_date = (today - datetime.timedelta(days=365)).strftime('%Y-%m-%d')  # 1-year data\n\n    short_squeeze_stocks = []\n    \n    for ticker in tickers:\n        stock_data = get_stock_data(ticker, start_date, today)\n        \n        if stock_data.empty:\n            continue\n        \n        stock_data_with_indicators = calculate_short_squeeze_indicators(stock_data)\n        \n        # Check for the most recent short squeeze signal\n        if stock_data_with_indicators['Potential Squeeze'].iloc[-1]:\n            short_squeeze_stocks.append({\n                'Ticker': ticker,\n                'Recent Price': stock_data_with_indicators['Adj Close'].iloc[-1],\n                'Recent Volume': stock_data_with_indicators['Volume'].iloc[-1],\n                'Daily Return': stock_data_with_indicators['Daily Return'].iloc[-1],\n                'Volume MA': stock_data_with_indicators['Volume MA'].iloc[-1],\n                'Price MA': stock_data_with_indicators['Price MA'].iloc[-1],\n                'Short Squeeze': True\n            })\n\n    return short_squeeze_stocks\n\n# List of tickers to analyze\ntickers = pd.read_csv('/kaggle/input/tickers-stock-market-amex/tickers.csv')\n\n# Identify short squeeze opportunities\nshort_squeeze_opportunities = identify_short_squeeze_stocks(tickers.values.tolist())\n\n# Display results\nif short_squeeze_opportunities:\n    df = pd.DataFrame(short_squeeze_opportunities)\n    print(\"Short Squeeze Opportunities Detected:\")\nelse:\n    print(\"No short squeeze opportunities detected at this time.\")\n\nclear_output()","metadata":{"trusted":true,"_kg_hide-input":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"Short Squeezes For The Day\")\ndf","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-07T20:06:02.962492Z","iopub.execute_input":"2025-01-07T20:06:02.962943Z","iopub.status.idle":"2025-01-07T20:06:02.98727Z","shell.execute_reply.started":"2025-01-07T20:06:02.962914Z","shell.execute_reply":"2025-01-07T20:06:02.986086Z"},"_kg_hide-input":true},"outputs":[{"name":"stdout","text":"Short Squeezes For The Day\n","output_type":"stream"},{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"    Ticker  Recent Price  Recent Volume  Daily Return   Volume MA  Price MA  \\\n0    [AIM]         0.250        1464800      0.086957    581015.0   0.21000   \n1   [CPHI]         0.290       12568100      0.260870   1574300.0   0.20100   \n2    [CVU]         4.650         209300      0.078886     51810.0   3.91550   \n3    [IHT]         2.510          35000      0.151376      3180.0   2.21800   \n4    [JOB]         0.280      191189700      0.272727  10019495.0   0.22800   \n5   [MITQ]         0.850        1066800      0.332288     76475.0   0.67595   \n6   [MLSS]         1.010         372700      0.063158    155340.0   0.87950   \n7   [MTNB]         0.734         378900      0.155906    120180.0   0.57160   \n8   [OGEN]         0.410        2358200      0.205882   1555145.0   0.36900   \n9   [OPTT]         1.610       81126000      0.450450  52397500.0   0.53450   \n10   [PLX]         2.230        2161700      0.051887    549560.0   1.82950   \n11   [RHE]         3.560       41613400      1.296774   2090730.0   1.65835   \n12   [RHE]         3.560       41613400      1.296774   2090730.0   1.65835   \n13  [SBEV]         0.270       60723800      0.125000   4555225.0   0.17210   \n14   [SLI]         1.700        2086100      0.062500   1318575.0   1.52550   \n15   [SSY]         1.100        5340600      0.208791    928105.0   0.85650   \n16  [STXS]         2.640         926300      0.113924    393150.0   2.31600   \n17  [VTAK]         0.560        1455700      0.056604    383425.0   0.39300   \n\n    Short Squeeze  \n0            True  \n1            True  \n2            True  \n3            True  \n4            True  \n5            True  \n6            True  \n7            True  \n8            True  \n9            True  \n10           True  \n11           True  \n12           True  \n13           True  \n14           True  \n15           True  \n16           True  \n17           True  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Ticker</th>\n      <th>Recent Price</th>\n      <th>Recent Volume</th>\n      <th>Daily Return</th>\n      <th>Volume MA</th>\n      <th>Price MA</th>\n      <th>Short Squeeze</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>[AIM]</td>\n      <td>0.250</td>\n      <td>1464800</td>\n      <td>0.086957</td>\n      <td>581015.0</td>\n      <td>0.21000</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>[CPHI]</td>\n      <td>0.290</td>\n      <td>12568100</td>\n      <td>0.260870</td>\n      <td>1574300.0</td>\n      <td>0.20100</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>[CVU]</td>\n      <td>4.650</td>\n      <td>209300</td>\n      <td>0.078886</td>\n      <td>51810.0</td>\n      <td>3.91550</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>[IHT]</td>\n      <td>2.510</td>\n      <td>35000</td>\n      <td>0.151376</td>\n      <td>3180.0</td>\n      <td>2.21800</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>[JOB]</td>\n      <td>0.280</td>\n      <td>191189700</td>\n      <td>0.272727</td>\n      <td>10019495.0</td>\n      <td>0.22800</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>[MITQ]</td>\n      <td>0.850</td>\n      <td>1066800</td>\n      <td>0.332288</td>\n      <td>76475.0</td>\n      <td>0.67595</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>[MLSS]</td>\n      <td>1.010</td>\n      <td>372700</td>\n      <td>0.063158</td>\n      <td>155340.0</td>\n      <td>0.87950</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>[MTNB]</td>\n      <td>0.734</td>\n      <td>378900</td>\n      <td>0.155906</td>\n      <td>120180.0</td>\n      <td>0.57160</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>[OGEN]</td>\n      <td>0.410</td>\n      <td>2358200</td>\n      <td>0.205882</td>\n      <td>1555145.0</td>\n      <td>0.36900</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>[OPTT]</td>\n      <td>1.610</td>\n      <td>81126000</td>\n      <td>0.450450</td>\n      <td>52397500.0</td>\n      <td>0.53450</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>[PLX]</td>\n      <td>2.230</td>\n      <td>2161700</td>\n      <td>0.051887</td>\n      <td>549560.0</td>\n      <td>1.82950</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>[RHE]</td>\n      <td>3.560</td>\n      <td>41613400</td>\n      <td>1.296774</td>\n      <td>2090730.0</td>\n      <td>1.65835</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>[RHE]</td>\n      <td>3.560</td>\n      <td>41613400</td>\n      <td>1.296774</td>\n      <td>2090730.0</td>\n      <td>1.65835</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>[SBEV]</td>\n      <td>0.270</td>\n      <td>60723800</td>\n      <td>0.125000</td>\n      <td>4555225.0</td>\n      <td>0.17210</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>[SLI]</td>\n      <td>1.700</td>\n      <td>2086100</td>\n      <td>0.062500</td>\n      <td>1318575.0</td>\n      <td>1.52550</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>[SSY]</td>\n      <td>1.100</td>\n      <td>5340600</td>\n      <td>0.208791</td>\n      <td>928105.0</td>\n      <td>0.85650</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>[STXS]</td>\n      <td>2.640</td>\n      <td>926300</td>\n      <td>0.113924</td>\n      <td>393150.0</td>\n      <td>2.31600</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>[VTAK]</td>\n      <td>0.560</td>\n      <td>1455700</td>\n      <td>0.056604</td>\n      <td>383425.0</td>\n      <td>0.39300</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":29},{"cell_type":"code","source":"# en fin","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}